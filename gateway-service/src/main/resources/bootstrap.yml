spring:
  application:
    name: gateway-server
  zipkin:
    base-url: http://zipkin-server:9411
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1
zuul:
  routes:
    notebook:
      path: /**
      serviceId: notebook-service
#      前测试的时候发现在服务都成功启动的时候第一次访问会有报错的情况发生,
#  但是之后又恢复正常访问
 #通过查询相关文档,了解到要解决此问题那么让需要实例化的类提前创建，而不是在第一次调用的时候创建
#主要是Ribbon进行客户端负载均衡的Client并不是在服务启动的时候就初始化好的，
#  而是在调用的时候才会去创建相应的Client，
#  所以第一次调用的耗时不仅仅包含发送HTTP请求的时间，
#  还包含了创建RibbonClient的时间，这样一来如果创建时间速度较慢，
#  同时设置的超时时间又比较短的话，很容易就会出现上面所描述的显现。
  ribbon:
    eager-load:
      enabled: true

ribbon:
  eureka:
    enabled: true

server:
  port: 8765

eureka:
  client:
    service-url:
      defaultZone:  ${DISCOVERY_URL:http://eureka-server:8888}/eureka/
    register-with-eureka: false


logging:
  level:
    ROOT: INFO
    org.springframework.web: DEBUG

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'
